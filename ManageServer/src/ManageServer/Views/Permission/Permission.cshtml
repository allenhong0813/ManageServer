@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Permission";

}

<h2><b>授權管理</b></h2>
<div class="container">
    <!-- Content here -->
    <div class="row" style="margin-bottom:5px; ">
        <form class="form-inline">
            <div class="form-group form-pairs">
                <label class="text-right">使用者ID</label>
                <input id="inpUserID" type="text" class="form-control" placeholder="UserID" style="margin-bottom: 5px;">
            </div>
            <div class="form-group  form-pairs" style="padding-bottom:5px">
                <label class="text-right">是否是管理者</label>
                <select id="selIsAdmin" class="form-control">
                    <option value="">全選</option>
                    <option value="true">是</option>
                    <option value="false">否</option>
                </select>
            </div>
            <button type="button" class="btn btn-sm btn-primary" style="margin-bottom: 5px;" onclick="query()">查詢</button>

        </form>
    </div>
</div>

<div id="jsGrid"></div>

@*dialog page*@
<div id="dialog-form" title="授權設定" style="display:none">
    @*<p class="validateTips">All form fields are required.</p>*@

    <div id="pmjsGrid"></div>

</div>

<script>
    var dialog;
    var form;
    var machineList = @Json.Serialize(ViewData["MachineList"]);
    var newMachineList;
    var userMachineData = null;

    $(document).ready(function () {
        //initModelGrid();
        //initGrid();
        $("#jsGrid").jsGrid({
            width: "100%",
            height: "400px",

            filtering: false,
            editing: true,
            selecting: true,
            inserting: false,
            sorting: true,
            paging: false,

            autoload: false,
            invalidMessage: "欄位輸入有誤：",

            controller: {
                loadData: function (filter) {
                    return filter;
                },

                //insertItem: function (item) {
                //    return alert("insertitem");
                //    //return $.ajax({
                //    //    type: "POST",
                //    //    url: "/Home/InsertMachineData",
                //    //    data: item,
                //    //}).fail(function (jqXHR, textStatus, errorThrown) {
                //        //if (jqXHR.responseText == "IPIsNull") {
                //        //    alert("Insert Error:[IP]不能為空。");
                //        //}
                //        //else if (jqXHR.responseText == "NameIsNull") {
                //        //    alert("Insert Error:[伺服器名稱]不能為空。");
                //        //}
                //        //else if (jqXHR.responseText == "LoginIDIsNull") {
                //        //    alert("Insert Error:[登入者帳號]不能為空。");
                //        //}
                //        //else if (jqXHR.responseText == "PasswordIsNull") {
                //        //    alert("Insert Error:[密碼]不能為空。");
                //        //}
                //        //else if (jqXHR.responseText == "OSIsNull") {
                //        //    alert("Insert Error:[系統]不能為空。");
                //        //}
                //        //else if (jqXHR.responseText == "HostIPIsNull") {
                //        //    alert("Insert Error:[本機IP]不能為空。");
                //        //}
                //        //else if (jqXHR.responseText == "DBNoConnect") {
                //        //    alert("Insert error：未連接上資料庫。")
                //        //}
                //        //else if (jqXHR.responseText == "Insert Error.") {
                //        //    alert("Insert error：新增資料發生錯誤")
                //        //}
                //        //else {
                //        //    alert("發生錯誤。");
                //        //    console.error(jqXHR.responseText);
                //        //}
                //    //});
                //},

                updateItem: function (item) {
                    return $.ajax({
                        type: "PUT",
                        url: "/Permission/UpdateUserMachineData",
                        data: {
                            isAdmin:item.isAdmin,
                            userID:item.userID,
                            machineKeys:item.assignMachineKeys
                        }
                    }).fail(function (jqXHR, textStatus, errorThrown) {

                    });
                },

                //deleteItem:
            },

            fields: [

                {
                    name: "userID", type: "text", title: "使用者ID", width: 100,
                    editTemplate: function(value) {
                        var $editControl = jsGrid.fields.text.prototype.editTemplate.call(this, value);
                        return $("<div>").attr("title", (value === undefined || value === null) ? "" : value).text((value === undefined || value === null) ? "" : value);
                    }
                },
                {
                    name: "isAdmin", type: "customCheckbox", title: "是否是管理者", width: 50,
                    itemTemplate: function (value, item) {
                        return chkDisableAdmin(value, item);
                    },
                    editTemplate: function(value , item) {
                        return chkIsAdmin(value, item);
                    },
                },
                {
                    name: "assignMachineKeys", type: "popButtom", title: "授權機台", width: 100,
                    itemTemplate: function (value, item) {
                        return btnDisabledPermission(value, item);
                    },
                    editTemplate: function(value , item) {
                        return btnPermission(value, item);
                    },
                },
                {
                    type: "control"
                }
            ]
        });
    });

    //checkbox function
    function chkDisableAdmin(isAdminValue, isAdminItem) {
        var $chkIsAdmin = $("<input disabled>").attr("type", "checkbox");
        return $chkIsAdmin.prop("checked", isAdminValue);
    }

    function chkIsAdmin(isAdminValue, isAdminItem) {
        var $chkIsAdmin = $("<input >").attr("type", "checkbox");
        return $chkIsAdmin.prop("checked", isAdminValue)
                            .on("change", function () {
                                var isChecked = $(this).is(":checked");
                                chkAdminItem(isChecked,isAdminValue,isAdminItem);
                            });
    }

    function chkAdminItem(isChecked,isAdminValue,isAdminItem){
        if(isChecked==true){
            alert("check");
            $(".btnPermission").prop('disabled', 'disabled');
            isAdminItem.isAdmin=true;
        }else {
            alert("uncheck");
            $(".btnPermission").prop('disabled', '');
            isAdminItem.isAdmin=true;
        }
    }

    //permission button
    function btnDisabledPermission(value, item) {
        var $btnPermission = $("<button class='btn btn-default btnPermission' disabled>");
        return $btnPermission.text("授權設定");
    }

    function btnPermission(value, item) {
        var $btnPermission = $("<button class='btn btn-default btnPermission'>");
        return $btnPermission.text("授權設定")
                            .on("click", function () {
                                dialogForm();
                                getUserID(value,item);
                                setUserPermission(value,item);
                            });
    }

    function getUserID(value,item){
        var assignMachineKeys = item.assignMachineKeys;
        $.each(machineList, function (index, machine) {
            if(assignMachineKeys.indexOf(machine.key) > -1){
                machine.isApply = true;
            }else{
                machine.isApply = false;
            }
        });

    }

    //set front-end and process permissible of buotton
    function setUserPermission(userValue,userItem) {
        $("#pmjsGrid").jsGrid({

            width: "100%",
            height: "100%",

            filtering: false,
            editing: false,
            selecting: true,
            inserting: false,
            sorting: false,
            paging: false,
            autoload: false,
            data: machineList,
            invalidMessage: "勾選有誤：",

            controller: {
                loadData: function (filter) {
                    return filter;
                },

                insertItem: function (item) {
                    return $.ajax({
                        type: "POST",
                        url: "/home/InsertMachineData",
                        datatype:JSON,
                        data: machineList,
                    }).fail(function (jqXHR, textStatus, errorThrown) {

                    });
                },

                //updateItem:

                //deleteItem:
            },

            fields: [
                {
                    headerTemplate: function() {
                        return $("<input>全選</input>").attr("type", "checkbox").attr("id","inpCheckAll")
                                .on("click", function () {
                                    checkedAllItem(userItem, machineList);
                                });
                    },
                    itemTemplate: function(machineValue, machineItem) {
                        return $("<input>").attr("type", "checkbox").attr("name","inpCheckItem")
                                .prop("checked", machineItem.isApply)
                                .on("change", function () {
                                    $(this).is(":checked") ? checkedSingleItem(userItem, machineItem, machineList):uncheckedSingleItem(userItem, machineItem, machineList);
                                    //item.isApply=true;
                                });
                    },
                    align: "center",
                    width: 50
                },
                {
                    name: "ip", type: "text", title: "IP", width: 80,
                },
                {
                    name: "name", type: "text", title: "伺服器名稱", width: 80,
                },
                {
                    name: "os", type: "text", title: "作業系統", width: 80,
                },
                {
                    name: "description", type: "text", title: "描述", width: 80,
                }
            ]
        })
    }


    var strCheckAllItemArray = [];
    var jsonCheckAllItem;
    var objCheckAllItem;
    var onRowUserID;

    var checkedSingleItem = function(userItem,machineItem,machineList) {
        machineItem.isApply = true;
        onRowUserID = userItem.userID;
    };

    var uncheckedSingleItem = function(userItem,machineItem,machineList) {
        machineItem.isApply = false;
        onRowUserID = userItem.userID;
    };


    var checkedAllItem = function(userItem,machineList) {
        if($("#inpCheckAll").prop("checked")) {
            $("input[name='inpCheckItem']").prop("checked", true);
            $.each(machineList, function (index, machine) {
                machine.isApply = true;
            });
        }else{
            $("input[name='inpCheckItem']").prop("checked", false);
            $.each(machineList, function (index, machine) {
                machine.isApply = false;
            });
        }
        onRowUserID = userItem.userID;

    };

    function dialogForm(value,item) {
        dialog = $("#dialog-form").dialog({
            autoOpen: true,
            height: 400,
            width: 600,
            modal: true,
            buttons: {
                "確定": confirmUserMachine,
                "取消": function () {
                    dialog.dialog("close");
                }
            },
            close: function () {
                //form[0].reset();
            }
        });

    }

    function confirmUserMachine() {

        var currentUserMachine = $.grep(userMachineData, function (element, index) {
            return element.userID == onRowUserID;
        });

        currentUserMachine[0].assignMachineKeys = [];

        $.each(machineList, function (indexInArray, machine) {
            if(machine.isApply == true)
                currentUserMachine[0].assignMachineKeys.push(machine.key);
        });

        $.each(userMachineData, function (indexInArray, userMachine) {
            if(userMachine.userID == currentUserMachine[0].userID){
                userMachine.assignMachineKeys = currentUserMachine[0].assignMachineKeys;
            }
        });

        dialog.dialog("close");
        $("#pmjsGrid").jsGrid("loadData", machineList);

    }

    //button query function
    function query() {
        var inpUserID = "";
        var selIsAdmin = "";

        if ($("#inpUserID").val() != null && $("#inpUserID").val() != "")
            inpUserID = $("#inpUserID").val();

        selIsAdmin = $("#selIsAdmin option:selected").val();
        if (selIsAdmin != null && selIsAdmin != "")
            selIsAdmin = selIsAdmin;

        $.ajax({
            type: "GET",
            url: "/Permission/GetAdminInfo",
            data: {
                userIDName: inpUserID,
                isAdminName: selIsAdmin
            }
        }).done(function (data) {
            userMachineData = data;
            $("#jsGrid").jsGrid("loadData", userMachineData);


        }).fail(function (jqXHR, textStatus, errorThrown) {
            if (jqXHR.responseText == "GetServerInfo Error.") {
                alert("Query error：取得資料發生錯誤。");
            }
            else if (jqXHR.responseText == "DBNoConnect") {
                alert("Query error：未連接上資料庫。")
            }
            else {
                alert("發生錯誤。");
                console.error(jqXHR.responseText);
            }
        });
    }
</script>