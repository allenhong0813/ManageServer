@*
    For more information on enabling MVC for empty projects, visit http://go.microsoft.com/fwlink/?LinkID=397860
*@

@model ManageServer.Models.MachineList

@{
    ViewData["Title"] = "Home";
}

<h2><b>伺服器管理</b></h2>
<div class="container">
    <!-- Content here -->
    <div id="status"><p id="state"></p></div>
    <div id="log"></div>
    <div class="row" style="margin-bottom:5px; ">
        <form class="form-inline">
            <div class="form-group form-pairs">
                <label class="text-right">IP</label>
                <input id="inpIPName" type="text" class="form-control" placeholder="IP Name" style="margin-bottom: 5px;">
            </div>
            <div class="form-group  form-pairs">
                <label class="text-right">伺服器名稱</label>
                <input id="inpServerName" type="text" class="form-control" placeholder="Server Name" style="margin-bottom: 5px;">
            </div>
            <button type="button" class="btn btn-sm btn-primary" style="margin-bottom: 5px;" onclick="query()">查詢</button>

        </form>
    </div>
</div>
<div id="jsGrid"></div>
@*dialog page*@
<div id="dialog-form" title="授權設定" style="display:none">
    <div id="pmjsGrid"></div>
</div>
<script>
    var userList = @Json.Serialize(ViewData["UserList"]);
    var machineUserData = null;

    $(document).ready(function () {
        initGrid();

        $("#jsGrid").jsGrid({
            width: "100%",
            height: "400px",

            editing: true,
            selecting: true,
            inserting: true,
            paging: false,
            autoload: false,
            invalidMessage: "欄位輸入有誤：",
            deleteConfirm: "確定刪除這筆資料嗎？",

            controller: {
                loadData: function (filter) {
                    return filter;
                },

                insertItem: function (item) {
                    return $.ajax({
                        type: "POST",
                        url: "/Home/InsertMachineData",
                        data: item,
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        if (jqXHR.responseText == "IPIsNull") {
                            alert("Insert Error:[IP]不能為空。");
                        }
                        else if (jqXHR.responseText == "NameIsNull") {
                            alert("Insert Error:[伺服器名稱]不能為空。");
                        }
                        else if (jqXHR.responseText == "LoginIDIsNull") {
                            alert("Insert Error:[登入者帳號]不能為空。");
                        }
                        else if (jqXHR.responseText == "PasswordIsNull") {
                            alert("Insert Error:[密碼]不能為空。");
                        }
                        else if (jqXHR.responseText == "OSIsNull") {
                            alert("Insert Error:[系統]不能為空。");
                        }
                        else if (jqXHR.responseText == "HostIPIsNull") {
                            alert("Insert Error:[本機IP]不能為空。");
                        }
                        else if (jqXHR.responseText == "DBNoConnect") {
                            alert("Insert error：未連接上資料庫。")
                        }
                        else if (jqXHR.responseText == "Insert Error.") {
                            alert("Insert error：新增資料發生錯誤")
                        }
                        else {
                            alert("發生錯誤。");
                            console.error(jqXHR.responseText);
                        }
                    });
                },

                updateItem: function (item) {
                    return $.ajax({
                        type: "PUT",
                        url: "/Home/UpdateMachineData",
                        data: item

                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        if (jqXHR.responseText == "IPIsNull") {
                            alert("Update Error:[IP]不能為空。");
                        }
                        else if (jqXHR.responseText == "NameIsNull") {
                            alert("Update Error:[伺服器名稱]不能為空。");
                        }
                        else if (jqXHR.responseText == "LoginIDIsNull") {
                            alert("Update Error:[登入者帳號]不能為空。");
                        }
                        else if (jqXHR.responseText == "PasswordIsNull") {
                            alert("Update Error:[密碼]不能為空。");
                        }
                        else if (jqXHR.responseText == "OSIsNull") {
                            alert("Update Error:[系統]不能為空。");
                        }
                        else if (jqXHR.responseText == "HostIPIsNull") {
                            alert("Update Error:[本機IP]不能為空。");
                        }
                        else if (jqXHR.responseText == "DBNoConnect") {
                            alert("Update error：未連接上資料庫。")
                        }
                        else if (jqXHR.responseText == "Update Error.") {
                            alert("Update error：更新資料發生錯誤。")
                        }
                        else {
                            alert("發生錯誤。");
                            console.error(jqXHR.responseText);
                        }
                    });
                },

                deleteItem: function (item) {
                    return $.ajax({
                        type: "DELETE",
                        url: "/Home/DeleteMachineData",
                        data: item
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        if (jqXHR.responseText == "Delete Error.") {
                            alert(alert("Delete error：刪除資料發生錯誤。"));
                        }
                        else if (jqXHR.responseText == "DBNoConnect") {
                            alert("Delete error：未連接上資料庫。")
                        }
                        else {
                            alert("發生錯誤。");
                            console.error(jqXHR.responseText);
                        }
                    });
                },
            },

            fields: [
                {
                    name: "ip", type: "text", title: "IP", width: 100,
                    validate: [
                    { validator: "required", message: "[IP]欄位為必填" },
                    {
                        validator: function (value, item) {
                            return /^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/.test(value);
                        },
                        message: "[IP]欄位：請輸入正確IP格式。eg.(172.0.0.1)"
                    }
                    ]
                },
                {
                    name: "name", type: "text", title: "伺服器名稱", width: 80,
                    validate: [
                        { validator: "required", message: "[伺服器名稱]欄位為必填" }
                    ],
                    itemTemplate: function (value, item) {
                        return value.replace(/</g, "&lt;");
                    },
                },
                {
                    name: "loginID", type: "text", title: "登入者帳號", width: 80 ,
                    validate: [
                        { validator: "required", message: "[登入者帳號]欄位為必填" },
                        {
                            validator: function (value, item) {
                                return /^[^\s]*$/g.test(value);
                            },
                            message: "[登入者帳號]欄位：不含空白字元"
                        }
                    ],
                    itemTemplate: function (value, item) {
                        return value.replace(/</g, "&lt;");
                    },
                },
                {
                    name: "password", type: "text", title: "密碼", width: 80, myCustomProperty: "bar",
                    validate: [
                        { validator: "required", message: "[密碼]欄位為必填" },
                        {
                            validator: function (value, item) {
                                return /^[^\s]*$/g.test(value);
                            },
                            message: "[密碼]欄位：不含空白字元"
                        }
                    ],
                    itemTemplate: function (value, item) {
                        return value.replace(/</g, "&lt;");
                    },
                },
                {
                    name: "os", type: "text", title: "系統", width: 100,
                    validate: [
                        { validator: "required", message: "[系統]欄位為必填" }
                    ],
                    itemTemplate: function (value, item) {
                        return value.replace(/</g, "&lt;");
                    },
                },
                {
                    name: "hostIP", type: "text", title: "本機IP", width: 100, validate: [
                    { validator: "required", message: "[本機IP]欄位為必填" },
                    {
                        validator: function (value, item) {
                            return /^((?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?))*$/.test(value);
                        },
                        message: "[本機IP]欄位：請輸入正確IP格式。eg.(172.0.0.1)"
                    }
                    ]
                },
        {
            name: "description", type: "text", title: "描述", width: 200,
            itemTemplate: function (value, item) {
                return (value == null) ? value : value.replace(/</g, "&lt;");
            },
        },
        {
            name: "assignUserKeys", title: "授權使用者", width: 80,
            itemTemplate: function (userValue, machineItem) {
                return btnDisabledPermission(userValue, machineItem);
            },
            editTemplate: function (userValue, machineItem) {
                return btnPermission(userValue, machineItem);
            },
        },
        {
            type: "control"
        }
            ]

            
        });

        var $btnPermissionSetting;
        var btnDisabledPermission = function (userValue, machineItem) {
            $btnPermissionSetting = $("<button class='btn btn-default btnPermission'>").prop('disabled', true).text("授權設定");
            return $btnPermissionSetting;
        };

        var btnPermission = function (userValue, machineItem) {
            $btnPermissionSetting = $("<button class='btn btn-default btnPermission'>").prop('disabled', false).text("授權設定");
            $btnPermissionSetting.on("click", function () {
                dialogForm(userValue, machineItem, confirmFunction);
                getMachineUser(userValue,machineItem);
                setMachinePermission(userValue, machineItem);
                checkOrRemoveCheckAll();
                
            })
            return $btnPermissionSetting;
        };

        var getMachineUser = function(userValue,machineItem){
            var assignUserKeys = machineItem.assignUserKeys;
            $.each(userList,function(index, user){
                if(assignUserKeys.indexOf(user.userID)>-1){
                    user.isApply=true;
                }else{
                    user.isApply=false;
                }
            });
        }

        //dialog confirm button
        var confirmFunction = function () {
            var currentMachineUser = $.grep(machineUserData, function (element, index) {
                return element.machineKeys == onRowMachineKey;
            });

            currentMachineUser[0].assignUserKeys = [];

            $.each(userList, function (indexInArray, user) {
                if (user.isApply == true)
                    currentMachineUser[0].assignUserKeys.push(user.userID);
            });

            $.each(machineUserData, function (indexInArray, machineUser) {
                if (machineUser.machineKeys == currentMachineUser[0].machineKeys) {
                    machineUser.assignUserKeys = currentMachineUser[0].assignUserKeys;
                }
            });
            dialog.dialog("close");
            $("#pmjsGrid").jsGrid("loadData", userList);
        }

        var setMachinePermission = function(userValue,machineItem){
            $("#pmjsGrid").jsGrid({
                width: "100%",
                height: "100%",
                filtering: false,
                editing: false,
                selecting: true,
                inserting: false,
                sorting: false,
                paging: false,
                autoload: false,
                data: userList,
                invalidMessage: "勾選有誤：",

                controller: {
                    loadData: function (filter) {
                        return filter;
                    },
                },

                fields: [
                    {
                        headerTemplate: function() {
                            return $("<input>全選</input>").attr("type", "checkbox").attr("id","inpCheckAll").attr("name","inpCheckAll")
                                    .on("click", function () {
                                        checkedAllItem(machineItem, userList);
                                    });
                        },
                        itemTemplate: function(userValue, userItem) {
                            return $("<input>").attr("type", "checkbox").attr("name","inpCheckItem")
                                    .prop("checked", userItem.isApply)
                                    .on("change", function () {
                                        $(this).is(":checked") ? checkedSingleItem(machineItem, userItem, userList):uncheckedSingleItem(machineItem, userItem, userList);
                                        checkOrRemoveCheckAll();
                                    });
                        },
                        align: "center",
                        width: 20
                    },
                    {
                        name: "userID", type: "text", title: "", width: 80,
                    },
                ]
            })
        }
        var onRowMachineKey;
        var checkedAllItem = function(machineItem,userList) {
            if($("#inpCheckAll").prop("checked")) {
                $("input[name='inpCheckItem']").prop("checked", true);
                $.each(userList, function (index, user) {
                    user.isApply = true;
                });
            }else{
                $("input[name='inpCheckItem']").prop("checked", false);
                $.each(userList, function (index, user) {
                    user.isApply = false;
                });
            }
            onRowMachineKey = machineItem.machineKeys;
        };

        var checkedSingleItem = function(machineItem,userItem,userList) {
            userItem.isApply = true;
            onRowMachineKey = machineItem.machineKeys;
        };

        var uncheckedSingleItem = function(machineItem,userItem,userList) {
            userItem.isApply = false;
            onRowMachineKey = machineItem.machineKeys;
        };

        function initGrid() {
            var d = $.Deferred();
            $.ajax({
                type: "GET",
                url: '/Home/GetServerInfo'
            }).done(function (data) {
                d.resolve(data);
                machineUserData = data;
                $("#jsGrid").jsGrid("loadData", machineUserData);
            }).fail(function (jqXHR, textStatus, errorThrown) {
                if (jqXHR.responseText == "GetServerInfo Error.") {
                    alert("Inital error：資料庫伺服器發生錯誤，無法取得資料。");
                }
                else if (jqXHR.responseText == "DBNoConnect") {
                    alert("Inital error：未連接上資料庫。")
                }
                else {
                    alert("發生錯誤。");
                    console.error(jqXHR.responseText);
                }
            });
            return d.promise();
        }
    });




    var initGridCustomFields = function(){
        alert("123");
    };


    //btn_query
    function query() {
        var ipName = "";
        var serverName = "";
        if ($("#inpIPName").val() != null && $("#inpIPName").val() != "")
            ipName = $("#inpIPName").val();

        if ($("#inpServerName").val() != null && $("#inpServerName").val() != "")
            serverName = $("#inpServerName").val();

        $.ajax({
            type: "GET",
            url: "/Home/GetServerInfo",
            data: {
                ipName: ipName,
                serverName: serverName
            }
        }).done(function (data) {
            machineUserData = data;
            $("#jsGrid").jsGrid("loadData", machineUserData);
        }).fail(function (jqXHR, textStatus, errorThrown) {
            if (jqXHR.responseText == "GetServerInfo Error.") {
                alert(alert("Query error：取得資料發生錯誤。"));
            }
            else if (jqXHR.responseText == "DBNoConnect") {
                alert("Query error：未連接上資料庫。")
            }
            else {
                alert("發生錯誤。");
                console.error(jqXHR.responseText);
            }
        });
    }
</script>